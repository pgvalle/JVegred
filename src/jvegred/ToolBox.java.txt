package jvegred;

import java.awt.*;
import java.awt.event.*;

import javax.tools.Tool;

import jvegred.figures.*;

class Button {

    public static final int SIZE = 32, FIGURE_SIZE = 24;
    private int x, y;
    private Figure figure;

    public Button(int x, int y, Figure figure) {
        figure.setBoundsPoints(
            x + (SIZE - FIGURE_SIZE)/2, x + (SIZE + FIGURE_SIZE)/2,
            y + (SIZE - FIGURE_SIZE)/2, y + (SIZE + FIGURE_SIZE)/2
        );

        this.x = x;
        this.y = y;
        this.figure = figure;
    }

    public void paint(Graphics2D g2d) {  
        g2d.setColor(Color.GRAY);
        g2d.fillRect(this.x, this.y, SIZE, SIZE);  
        this.figure.paint(g2d);
    }

    public void paintFocusRect(Graphics2D g2d) {
        g2d.setColor(Color.RED);
        g2d.drawRect(this.x, this.y, SIZE, SIZE);
    }

    public void paintSelected(Graphics2D g2d) {
        g2d.setColor(Color.BLACK);
        g2d.drawRect(this.x, this.y, SIZE, SIZE);

        this.paint(g2d);
    }
}

public class ToolBox implements MouseListener, MouseMotionListener {

    public int x, y;
    public Button[] buttons;
    public int focused, selected;

    private ToolBox(int x, int y) {
        this.x = x;
        this.y = y;
        this.buttons = new Button[5];

        buttons[0] = new Button(x                , y, new Line(0, 0, 0, 0));
        buttons[2] = new Button(x +   Button.SIZE, y, new Triangle(0, 0, 0, 0));
        buttons[1] = new Button(x + 2*Button.SIZE, y, new Rectangl3(0, 0, 0, 0));
        buttons[3] = new Button(x + 3*Button.SIZE, y, new Hexagon(0, 0, 0, 0));
        buttons[0] = new Button(x + 4*Button.SIZE, y, new Elipse(0, 0, 0, 0));

        this.focused = this.selected = -1;
    }

    public static final ToolBox toolbox = new ToolBox(10, 40); 

    public void paint(Graphics2D g2d) {
        // toolbox background
        g2d.setColor(Color.GRAY);
        g2d.fillRect(this.x, this.y, 4*Button.SIZE, Button.SIZE);
        
        // painting inative buttons
        for (int i = 0; i < this.buttons.length; i++) {
            if (i != this.focused && i != this.selected)
                this.buttons[i].paint(g2d);
        }

        // button which mouse is over it
        if (this.focused != -1)
            this.buttons[this.focused].paintFocused(g2d);
        // current figure type selected
        if (this.selected != -1)
            this.buttons[this.selected].paintSelected(g2d);
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        
    }

    @Override
    public void mouseExited(MouseEvent e) {
        
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        
    }

    @Override
    public void mousePressed(MouseEvent e) {
        
    }

    @Override
    public void mouseDragged(MouseEvent e) {
        
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        
    }
}
